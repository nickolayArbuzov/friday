{"version":3,"sources":["Common/NavLink/NavLink.tsx","Common/InputText/InputeText.tsx","Common/Button/Button.tsx","Common/CheckBox/CheckBox.tsx","TestPage/TestPage.tsx","Login/LoginPage.tsx","NewPassword/NewPasswordPage.tsx","PasswordRecovery/PasswordRecoveryPage.tsx","Profile/ProfilePage.tsx","Registration/RegistrationPage.tsx","App.tsx","reportWebVitals.ts","Login/LoginReducer.ts","NewPassword/NewPasswordReducer.ts","PasswordRecovery/PasswordRecoveryReducer.ts","Profile/ProfileReducer.ts","Registration/RegistrationReducer.ts","Redux/store.ts","index.tsx"],"names":["CommonNavLink","props","className","to","url","title","InputText","type","id","required","Button","value","CheckBox","htmlFor","text","TestPage","LoginPage","NewPasswordPage","PasswordRecoveryPage","ProfilePage","RegistrationPage","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","loginReducer","state","action","newPasswordReducer","passwordRecoveryReducer","profileReducer","registrationReducer","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52e4a44d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./style.css\"\r\ntype PropsType = {\r\n    url:string\r\n    title:string\r\n}\r\n\r\n\r\nexport const CommonNavLink = (props:PropsType) => {\r\n    return (\r\n        <div>\r\n            <NavLink className={\"link\"} to={props.url}>{props.title}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\ntype PropsType = {\r\n    text:string\r\n}\r\n\r\n\r\nexport const InputText = (props:PropsType) => {\r\n    return (\r\n        <div>\r\n\r\n                <div className=\"form-row\">\r\n                 <input type=\"text\" id=\"name\" required/>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\ntype PropsType={\r\n    title:string\r\n}\r\nexport const Button = (props:PropsType)=>{\r\n    return(\r\n\r\n            <div className=\"form-row\">\r\n                <input type=\"submit\" value={props.title}/>\r\n            </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\ntype PropsType = {\r\ntext:string\r\n}\r\n\r\n\r\nexport const CheckBox = (props:PropsType) => {\r\n    return (\r\n        <div >\r\n            <input type=\"checkbox\" className=\"checkbox\" id=\"checkbox\"/>\r\n            <label htmlFor=\"checkbox\">{props.text}</label>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\nimport {CommonNavLink} from \"../Common/NavLink/NavLink\";\r\nimport {InputText} from \"../Common/InputText/InputeText\";\r\nimport {Button} from \"../Common/Button/Button\";\r\nimport {CheckBox} from \"../Common/CheckBox/CheckBox\";\r\n\r\n\r\nexport const TestPage = () => {\r\n\r\n    return (\r\n        <div className={\"testPage\"}>\r\n            <h1>Тестовая страница</h1>\r\n            <div className={\"item\"}>\r\n                <InputText text={\"some text\"}/>\r\n            </div>\r\n            <div className={\"item\"}>\r\n                <CheckBox text={'try to change'}/>\r\n            </div>\r\n            <div className={\"item\"}>\r\n                <Button title={'simple Button'}/>\r\n            </div>\r\n            <div className={\"item\"}>\r\n\r\n                <CommonNavLink title={\"check how its work\"} url={\"/\"}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const LoginPage = ()=>{\r\n    return(\r\n        <div>Login</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const NewPasswordPage = ()=>{\r\n    return(\r\n        <div>New Password</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const PasswordRecoveryPage = ()=>{\r\n    return(\r\n        <div>\r\nPasswordRecovery\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const ProfilePage = ()=>{\r\n    return(\r\n        <div>\r\nProfile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const RegistrationPage = ()=>{\r\n    return(\r\n        <div>\r\nRegistration\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {TestPage} from \"./TestPage/TestPage\";\r\nimport {Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginPage } from './Login/LoginPage';\r\nimport {NewPasswordPage} from \"./NewPassword/NewPasswordPage\";\r\nimport {PasswordRecoveryPage} from \"./PasswordRecovery/PasswordRecoveryPage\";\r\nimport {ProfilePage} from \"./Profile/ProfilePage\";\r\nimport {RegistrationPage} from \"./Registration/RegistrationPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={\"App\"}>\r\n      <Switch>\r\n        <Route exact path={\"/\"} render={() => <TestPage/>}/>\r\n        <Route path={\"/login\"} render={() => <LoginPage/>}/>\r\n        <Route path={\"/newPassword\"} render={() => <NewPasswordPage/>}/>\r\n        <Route path={\"/passwordRecovery\"} render={() => <PasswordRecoveryPage/>}/>\r\n        <Route path={\"/profile\"} render={() => <ProfilePage/>}/>\r\n        <Route path={\"/registration\"} render={() => <RegistrationPage/>}/>\r\n        <Route path={'/404'} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\r\n        <Redirect path={'*'} to={\"404\"}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"../Login/LoginReducer\";\r\nimport {newPasswordReducer} from \"../NewPassword/NewPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../PasswordRecovery/PasswordRecoveryReducer\";\r\nimport {profileReducer} from \"../Profile/ProfileReducer\";\r\nimport {registrationReducer} from \"../Registration/RegistrationReducer\";\r\n\r\n\r\nexport type StoreType = typeof store;\r\nexport type RootState = ReturnType<typeof reducers>;\r\nexport type AppDispatch = typeof store.dispatch\r\nlet reducers =combineReducers({\r\n    loginReducer,\r\n    newPasswordReducer,\r\n    passwordRecoveryReducer,\r\n    profileReducer,\r\n    registrationReducer\r\n})\r\n\r\n\r\nexport let store = createStore(reducers);\r\n// @ts-ignore\r\nwindow.store=store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./Redux/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <HashRouter>\r\n              <App />\r\n          </HashRouter>\r\n      </Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}